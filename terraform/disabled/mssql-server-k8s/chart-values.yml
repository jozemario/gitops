# # General parameters
# agname: ag1
# acceptEula: true
# # Container parameters
# agentsContainerImage:
#   repository: mcr.microsoft.com/mssql/ha
#   tag: 2019-latest
#   pullPolicy: IfNotPresent
# sqlServerContainer:
#   repository: mcr.microsoft.com/mssql/server
#   tag: 2019-latest
#   pullPolicy: IfNotPresent
# # Service parameters
# sqlservice:
#   type: LoadBalancer
#   port: 1433
# agservice:
#   type: LoadBalancer
#   port: 1433

acceptEula:
  value: "y"
edition:
  value: Developer
collation: SQL_Latin1_General_CP1_CI_AS
lcid: 1033
hadr: 0
agent:
  enabled: false
# Override sapassword in templates/secret.yaml
sapassword: "P0o9i8u7y6@@"
existingSecret: ""
existingSecretKey: sapassword
image:
  repository: mcr.microsoft.com/mssql/server #microsoft/mssql-server-linux
  tag: 2019-latest #2017-CU5
  pullPolicy: IfNotPresent
  ## It is possible to specify docker registry credentials
  ## See https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  # pullSecrets:
  #    - name: regsecret

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName: "default-scheduler"

service:
  # If headless is set to TRUE then the service type is ignored
  headless: false
  type: NodePort #ClusterIP
  port: 1433
  nodePort: 30007
  annotations: {}
  labels: {}
  loadBalancerIP:
deployment:
  annotations: {}
  labels: {}
pod:
  annotations: {}
  labels: {}
persistence:
  enabled: true
    #existingDataClaim: "mssql-pvc"
    #existingTransactionLogClaim: mssql-pvc
    #existingBackupClaim: mssql-pvc
  #existingMasterClaim: "mssql-pvc"
  storageClass: "nfs-client"
  dataAccessMode: ReadWriteOnce
  dataSize: 1Gi
  transactionLogAccessMode: ReadWriteOnce
  transactionLogSize: 1Gi
  backupAccessMode: ReadWriteOnce
  backupSize: 1Gi
  masterAccessMode: ReadWriteOnce
  masterSize: 1Gi
livenessprobe:
  initialDelaySeconds: 15
  periodSeconds: 20
readinessprobe:
  initialDelaySeconds: 5
  periodSeconds: 10
resources:
  limits:
    #  cpu: 100m
    memory: 2Gi
  # requests:
  #  cpu: 100m
  #  memory: 2Gi
nodeSelector: {}
# kubernetes.io/hostname: minikube

tolerations: []

affinity: {}

securityContext: {}
# runAsUser: 1000

#
##helm install --name sql-server stable/mssql-linux --set acceptEula.value=Y --set sapassword=P0o9i8u7y6 --set edition.value=Developer

#helm install -f mssqlchartcfg.yaml sql-server stable/mssql-linux --namespace dbs
